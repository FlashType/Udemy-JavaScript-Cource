"use strict";
//! Условия
//! Если 4 равен 4,то вывести в консоль "Ok!". Интересно,что если этому оператору сравнения добавить оператор отрициния [!], то сообщение в консоль всё равно будет выводиться.
if (4 == '4') {
	console.log('Ok!');

}
//! Еслт условие не выполянется, то вывести "Error!"
if (4 == 9) {
	console.log('Ok!');
}
else {
	console.log('Error!');
}

//!
const num = 50;
if (num < 49) {
	console.log('Error!');

} else if (num > 100) {
	console.log('Too much');
} else {
	console.log('Ok!');
}
//! Пример выше выглядит немного грамостко, поэтому существует немного инная структура, корорая проверяет значения на СТРОГОЕ РАВЕНСТВО
const num2 = 51;
switch (num2) {
	case 20: console.log('Nope')
		break;
	case 52: console.log('Np')
		break;
	case '51': console.log('YAS!')
		break;
	default: console.log('Maybe next time around') //! Выводится,если ни одно из условий не было выполнено
	break;
}
console.log(num2);


//! Тернарный оператор, позволяет записывать условия более компактно, изменяя синтаксис написания:
const one = 70;
//todo			if-условие						else-условие
(one === 50) ? console.log('Fine!') : console.log('error!');

//!Виды операторов:
//*Тернарные-оператор в работе коготорого учавствует 3 аргумента [?,:]
//*Бинарный - 2 аргумента "4[+/-]4"
//*Унарный - 1 аргумент [+/-]"4"
